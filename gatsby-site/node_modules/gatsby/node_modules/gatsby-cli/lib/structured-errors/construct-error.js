"use strict";

const Joi = require(`@hapi/joi`);

const stackTrace = require(`stack-trace`);

const errorSchema = require(`./error-schema`);

const _require = require(`./error-map`),
      errorMap = _require.errorMap,
      defaultError = _require.defaultError; // Merge partial error details with information from the errorMap
// Validate the constructed object against an error schema
// TODO: 'details' is not a descriptive name


const constructError = ({
  details
}) => {
  const result = details.id && errorMap[details.id] || defaultError; // merge

  const structuredError = Object.assign({}, details, {}, result, {
    text: result.text(details.context),
    stack: details.error ? stackTrace.parse(details.error) : [],
    docsUrl: result.docsUrl || `https://gatsby.dev/issue-how-to`
  }); // validate

  const _Joi$validate = Joi.validate(structuredError, errorSchema),
        error = _Joi$validate.error;

  if (error !== null) {
    console.log(`Failed to validate error`, error);
    process.exit(1);
  }

  return structuredError;
};

module.exports = constructError;