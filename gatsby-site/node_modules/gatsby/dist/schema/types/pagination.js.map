{"version":3,"sources":["../../../src/schema/types/pagination.js"],"names":["getFieldsEnum","require","distinct","group","getPageInfo","schemaComposer","getOrCreateOTC","tc","addFields","currentPage","hasPreviousPage","hasNextPage","itemCount","pageCount","perPage","getEdge","typeComposer","typeName","getTypeName","next","node","getTypeNonNull","previous","createPagination","fields","paginationTypeComposer","totalCount","edges","nodes","pageInfo","makeFieldNonNull","getGroup","field","fieldValue","getPagination","inputTypeComposer","getInputTypeComposer","fieldsEnumTC","type","args","resolve","skip","limit","module","exports"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAE,QAAF,CAAjC;;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAsBF,OAAO,CAAE,cAAF,CAAnC;;AAEA,MAAMG,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAClBA,cAAc,CAACC,cAAf,CAA+B,UAA/B,EAA0CC,EAAE,IAAI;AAC9CA,EAAAA,EAAE,CAACC,SAAH,CAAa;AACXC,IAAAA,WAAW,EAAG,MADH;AAEXC,IAAAA,eAAe,EAAG,UAFP;AAGXC,IAAAA,WAAW,EAAG,UAHH;AAIXC,IAAAA,SAAS,EAAG,MAJD;AAKXC,IAAAA,SAAS,EAAG,MALD;AAMXC,IAAAA,OAAO,EAAG;AANC,GAAb;AAQD,CATD,CADF;;AAYA,MAAMC,OAAO,GAAG,CAAC;AAAEV,EAAAA,cAAF;AAAkBW,EAAAA;AAAlB,CAAD,KAAsC;AACpD,QAAMC,QAAQ,GAAGD,YAAY,CAACE,WAAb,KAA8B,MAA/C;AACA,SAAOb,cAAc,CAACC,cAAf,CAA8BW,QAA9B,EAAwCV,EAAE,IAAI;AACnDA,IAAAA,EAAE,CAACC,SAAH,CAAa;AACXW,MAAAA,IAAI,EAAEH,YADK;AAEXI,MAAAA,IAAI,EAAEJ,YAAY,CAACK,cAAb,EAFK;AAGXC,MAAAA,QAAQ,EAAEN;AAHC,KAAb;AAKD,GANM,CAAP;AAOD,CATD;;AAWA,MAAMO,gBAAgB,GAAG,CAAC;AACxBlB,EAAAA,cADwB;AAExBW,EAAAA,YAFwB;AAGxBQ,EAAAA,MAHwB;AAIxBP,EAAAA;AAJwB,CAAD,KAKnB;AACJ,QAAMQ,sBAAsB,GAAGpB,cAAc,CAACC,cAAf,CAA8BW,QAA9B,EAAwCV,EAAE,IAAI;AAC3EA,IAAAA,EAAE,CAACC,SAAH;AACEkB,MAAAA,UAAU,EAAG,MADf;AAEEC,MAAAA,KAAK,EAAE,CAACZ,OAAO,CAAC;AAAEV,QAAAA,cAAF;AAAkBW,QAAAA;AAAlB,OAAD,CAAP,CAA0CK,cAA1C,EAAD,CAFT;AAGEO,MAAAA,KAAK,EAAE,CAACZ,YAAY,CAACK,cAAb,EAAD,CAHT;AAIEQ,MAAAA,QAAQ,EAAEzB,WAAW,CAAC;AAAEC,QAAAA;AAAF,OAAD,CAAX,CAAgCgB,cAAhC;AAJZ,OAKKG,MALL;AAOD,GAR8B,CAA/B;AASAC,EAAAA,sBAAsB,CAACK,gBAAvB,CAAyC,OAAzC;AACAL,EAAAA,sBAAsB,CAACK,gBAAvB,CAAyC,OAAzC;AACA,SAAOL,sBAAP;AACD,CAlBD;;AAoBA,MAAMM,QAAQ,GAAG,CAAC;AAAE1B,EAAAA,cAAF;AAAkBW,EAAAA;AAAlB,CAAD,KAAsC;AACrD,QAAMC,QAAQ,GAAGD,YAAY,CAACE,WAAb,KAA8B,iBAA/C;AACA,QAAMM,MAAM,GAAG;AACbQ,IAAAA,KAAK,EAAG,SADK;AAEbC,IAAAA,UAAU,EAAG;AAFA,GAAf;AAIA,SAAOV,gBAAgB,CAAC;AAAElB,IAAAA,cAAF;AAAkBW,IAAAA,YAAlB;AAAgCQ,IAAAA,MAAhC;AAAwCP,IAAAA;AAAxC,GAAD,CAAvB;AACD,CAPD;;AASA,MAAMiB,aAAa,GAAG,CAAC;AAAE7B,EAAAA,cAAF;AAAkBW,EAAAA;AAAlB,CAAD,KAAsC;AAC1D,QAAMmB,iBAAiB,GAAGnB,YAAY,CAACoB,oBAAb,EAA1B;AACA,QAAMnB,QAAQ,GAAGD,YAAY,CAACE,WAAb,KAA8B,YAA/C;AACA,QAAMmB,YAAY,GAAGrC,aAAa,CAAC;AACjCK,IAAAA,cADiC;AAEjCW,IAAAA,YAFiC;AAGjCmB,IAAAA;AAHiC,GAAD,CAAlC;AAKA,QAAMX,MAAM,GAAG;AACbtB,IAAAA,QAAQ,EAAE;AACRoC,MAAAA,IAAI,EAAE,CAAE,SAAF,CADE;AAERC,MAAAA,IAAI,EAAE;AACJP,QAAAA,KAAK,EAAEK,YAAY,CAAChB,cAAb;AADH,OAFE;AAKRmB,MAAAA,OAAO,EAAEtC;AALD,KADG;AAQbC,IAAAA,KAAK,EAAE;AACLmC,MAAAA,IAAI,EAAE,CAACP,QAAQ,CAAC;AAAE1B,QAAAA,cAAF;AAAkBW,QAAAA;AAAlB,OAAD,CAAR,CAA2CK,cAA3C,EAAD,CADD;AAELkB,MAAAA,IAAI,EAAE;AACJE,QAAAA,IAAI,EAAG,KADH;AAEJC,QAAAA,KAAK,EAAG,KAFJ;AAGJV,QAAAA,KAAK,EAAEK,YAAY,CAAChB,cAAb;AAHH,OAFD;AAOLmB,MAAAA,OAAO,EAAErC;AAPJ;AARM,GAAf;AAkBA,QAAMsB,sBAAsB,GAAGF,gBAAgB,CAAC;AAC9ClB,IAAAA,cAD8C;AAE9CW,IAAAA,YAF8C;AAG9CQ,IAAAA,MAH8C;AAI9CP,IAAAA;AAJ8C,GAAD,CAA/C;AAMAQ,EAAAA,sBAAsB,CAACK,gBAAvB,CAAyC,UAAzC;AACAL,EAAAA,sBAAsB,CAACK,gBAAvB,CAAyC,OAAzC;AACA,SAAOL,sBAAP;AACD,CAnCD;;AAqCAkB,MAAM,CAACC,OAAP,GAAiB;AACfxC,EAAAA,WADe;AAEfW,EAAAA,OAFe;AAGfgB,EAAAA,QAHe;AAIfG,EAAAA;AAJe,CAAjB","sourcesContent":["const { getFieldsEnum } = require(`./sort`)\nconst { distinct, group } = require(`../resolvers`)\n\nconst getPageInfo = ({ schemaComposer }) =>\n  schemaComposer.getOrCreateOTC(`PageInfo`, tc => {\n    tc.addFields({\n      currentPage: `Int!`,\n      hasPreviousPage: `Boolean!`,\n      hasNextPage: `Boolean!`,\n      itemCount: `Int!`,\n      pageCount: `Int!`,\n      perPage: `Int`,\n    })\n  })\n\nconst getEdge = ({ schemaComposer, typeComposer }) => {\n  const typeName = typeComposer.getTypeName() + `Edge`\n  return schemaComposer.getOrCreateOTC(typeName, tc => {\n    tc.addFields({\n      next: typeComposer,\n      node: typeComposer.getTypeNonNull(),\n      previous: typeComposer,\n    })\n  })\n}\n\nconst createPagination = ({\n  schemaComposer,\n  typeComposer,\n  fields,\n  typeName,\n}) => {\n  const paginationTypeComposer = schemaComposer.getOrCreateOTC(typeName, tc => {\n    tc.addFields({\n      totalCount: `Int!`,\n      edges: [getEdge({ schemaComposer, typeComposer }).getTypeNonNull()],\n      nodes: [typeComposer.getTypeNonNull()],\n      pageInfo: getPageInfo({ schemaComposer }).getTypeNonNull(),\n      ...fields,\n    })\n  })\n  paginationTypeComposer.makeFieldNonNull(`edges`)\n  paginationTypeComposer.makeFieldNonNull(`nodes`)\n  return paginationTypeComposer\n}\n\nconst getGroup = ({ schemaComposer, typeComposer }) => {\n  const typeName = typeComposer.getTypeName() + `GroupConnection`\n  const fields = {\n    field: `String!`,\n    fieldValue: `String`,\n  }\n  return createPagination({ schemaComposer, typeComposer, fields, typeName })\n}\n\nconst getPagination = ({ schemaComposer, typeComposer }) => {\n  const inputTypeComposer = typeComposer.getInputTypeComposer()\n  const typeName = typeComposer.getTypeName() + `Connection`\n  const fieldsEnumTC = getFieldsEnum({\n    schemaComposer,\n    typeComposer,\n    inputTypeComposer,\n  })\n  const fields = {\n    distinct: {\n      type: [`String!`],\n      args: {\n        field: fieldsEnumTC.getTypeNonNull(),\n      },\n      resolve: distinct,\n    },\n    group: {\n      type: [getGroup({ schemaComposer, typeComposer }).getTypeNonNull()],\n      args: {\n        skip: `Int`,\n        limit: `Int`,\n        field: fieldsEnumTC.getTypeNonNull(),\n      },\n      resolve: group,\n    },\n  }\n  const paginationTypeComposer = createPagination({\n    schemaComposer,\n    typeComposer,\n    fields,\n    typeName,\n  })\n  paginationTypeComposer.makeFieldNonNull(`distinct`)\n  paginationTypeComposer.makeFieldNonNull(`group`)\n  return paginationTypeComposer\n}\n\nmodule.exports = {\n  getPageInfo,\n  getEdge,\n  getGroup,\n  getPagination,\n}\n"],"file":"pagination.js"}