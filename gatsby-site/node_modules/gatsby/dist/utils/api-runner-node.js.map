{"version":3,"sources":["../../src/utils/api-runner-node.js"],"names":["Promise","require","_","chalk","bindActionCreators","tracer","globalTracer","reporter","getCache","createNodeId","createContentDigest","buildObjectType","buildUnionType","buildInterfaceType","buildInputObjectType","buildEnumType","buildScalarType","emitter","getPublicPath","getNonGatsbyCodeFrameFormatted","trackBuildError","decorateEvent","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","undefined","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","runAPI","gatsbyNode","resolve","spanOptions","pluginSpan","setTag","store","loadNodeContent","getNodes","getNode","getNodesByType","hasNodeChanged","getNodeAndSavePathDependency","publicActions","restrictedActionsAvailableInAPI","availableActions","dispatch","config","program","getState","pathPrefix","prefixPaths","publicPath","namespacedCreateNodeId","id","tracing","cache","actions","apiFinished","alreadyDisplayed","createPageAction","createPage","warning","stripIndent","bold","possiblyCodeFrame","push","warn","join","apiCallArgs","basePath","schema","pluginOptions","fromCallback","callback","cb","err","val","finish","e","error","pluginName","version","result","then","res","apisRunningById","Map","apisRunningByTraceId","waitingForCasacadeToFinish","module","exports","pluginSource","apiSpanArgs","apiSpan","forEach","traceTags","value","plugins","flattenedPlugins","implementingPlugins","filter","nodeAPIs","includes","apiRunInstance","span","startTime","Date","toJSON","type","node","internal","contentDigest","filename","page","path","argsJson","JSON","stringify","omit","waitForCascadingActions","set","has","currentCount","get","stopQueuedApiRuns","onAPIRunComplete","actionHandler","action","payload","on","off","mapSeries","catch","panicOnBuild","context","message","Error","results","delete","size","emit","isEmpty","instance","apisByTraceIdCount"],"mappings":"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","sourcesContent":["const Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst chalk = require(`chalk`)\nconst { bindActionCreators } = require(`redux`)\n\nconst tracer = require(`opentracing`).globalTracer()\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst getCache = require(`./get-cache`)\nconst createNodeId = require(`./create-node-id`)\nconst { createContentDigest } = require(`gatsby-core-utils`)\nconst {\n  buildObjectType,\n  buildUnionType,\n  buildInterfaceType,\n  buildInputObjectType,\n  buildEnumType,\n  buildScalarType,\n} = require(`../schema/types/type-builders`)\nconst { emitter } = require(`../redux`)\nconst getPublicPath = require(`./get-public-path`)\nconst { getNonGatsbyCodeFrameFormatted } = require(`./stack-trace-utils`)\nconst { trackBuildError, decorateEvent } = require(`gatsby-telemetry`)\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId } = actionOptions\n  if (boundPluginActionCreators[plugin.name + api + traceId]) {\n    return boundPluginActionCreators[plugin.name + api + traceId]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          if (args.length === 1) {\n            return boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            return boundActionCreator(args[0], args[1], actionOptions)\n          }\n          return undefined\n        }\n      }\n    }\n    boundPluginActionCreators[\n      plugin.name + api + traceId\n    ] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst runAPI = (plugin, api, args) => {\n  const gatsbyNode = require(`${plugin.resolve}/gatsby-node`)\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n\n    const { store, emitter } = require(`../redux`)\n    const {\n      loadNodeContent,\n      getNodes,\n      getNode,\n      getNodesByType,\n      hasNodeChanged,\n      getNodeAndSavePathDependency,\n    } = require(`../db/nodes`)\n    const {\n      publicActions,\n      restrictedActionsAvailableInAPI,\n    } = require(`../redux/actions`)\n    const availableActions = {\n      ...publicActions,\n      ...(restrictedActionsAvailableInAPI[api] || {}),\n    }\n    const boundActionCreators = bindActionCreators(\n      availableActions,\n      store.dispatch\n    )\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan }\n    )\n\n    const { config, program } = store.getState()\n\n    const pathPrefix = (program.prefixPaths && config.pathPrefix) || ``\n    const publicPath = getPublicPath({ ...config, ...program }, ``)\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    const cache = getCache(plugin.name)\n\n    // Ideally this would be more abstracted and applied to more situations, but right now\n    // this can be potentially breaking so targeting `createPages` API and `createPage` action\n    let actions = doubleBoundActionCreators\n    let apiFinished = false\n    if (api === `createPages`) {\n      let alreadyDisplayed = false\n      const createPageAction = actions.createPage\n      // create new actions object with wrapped createPage action\n      // doubleBoundActionCreators is memoized, so we can't just\n      // reassign createPage field as this would cause this extra logic\n      // to be used in subsequent APIs and we only want to target this `createPages` call.\n      actions = {\n        ...actions,\n        createPage: (...args) => {\n          createPageAction(...args)\n          if (apiFinished && !alreadyDisplayed) {\n            const warning = [\n              reporter.stripIndent(`\n              Action ${chalk.bold(\n                `createPage`\n              )} was called outside of its expected asynchronous lifecycle ${chalk.bold(\n                `createPages`\n              )} in ${chalk.bold(plugin.name)}.\n              Ensure that you return a Promise from ${chalk.bold(\n                `createPages`\n              )} and are awaiting any asynchronous method invocations (like ${chalk.bold(\n                `graphql`\n              )} or http requests).\n              For more info and debugging tips: see ${chalk.bold(\n                `https://gatsby.dev/sync-actions`\n              )}\n            `),\n            ]\n\n            const possiblyCodeFrame = getNonGatsbyCodeFrameFormatted()\n            if (possiblyCodeFrame) {\n              warning.push(possiblyCodeFrame)\n            }\n\n            reporter.warn(warning.join(`\\n\\n`))\n            alreadyDisplayed = true\n          }\n        },\n      }\n    }\n\n    const apiCallArgs = [\n      {\n        ...args,\n        basePath: pathPrefix,\n        pathPrefix: publicPath,\n        boundActionCreators: actions,\n        actions,\n        loadNodeContent,\n        store,\n        emitter,\n        getCache,\n        getNodes,\n        getNode,\n        getNodesByType,\n        hasNodeChanged,\n        reporter,\n        getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n        schema: {\n          buildObjectType,\n          buildUnionType,\n          buildInterfaceType,\n          buildInputObjectType,\n          buildEnumType,\n          buildScalarType,\n        },\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return Promise.fromCallback(callback => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          callback(err, val)\n          apiFinished = true\n        }\n\n        try {\n          gatsbyNode[api](...apiCallArgs, cb)\n        } catch (e) {\n          trackBuildError(api, {\n            error: e,\n            pluginName: `${plugin.name}@${plugin.version}`,\n          })\n          throw e\n        }\n      })\n    } else {\n      const result = gatsbyNode[api](...apiCallArgs)\n      pluginSpan.finish()\n      return Promise.resolve(result).then(res => {\n        apiFinished = true\n        return res\n      })\n    }\n  }\n\n  return null\n}\n\nlet apisRunningById = new Map()\nlet apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\nmodule.exports = async (api, args = {}, pluginSource) =>\n  new Promise(resolve => {\n    const { parentSpan } = args\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n    apiSpan.setTag(`api`, api)\n    _.forEach(args.traceTags, (value, key) => {\n      apiSpan.setTag(key, value)\n    })\n\n    const { store } = require(`../redux`)\n    const plugins = store.getState().flattenedPlugins\n\n    // Get the list of plugins that implement this API.\n    // Also: Break infinite loops. Sometimes a plugin will implement an API and\n    // call an action which will trigger the same API being called.\n    // `onCreatePage` is the only example right now. In these cases, we should\n    // avoid calling the originating plugin again.\n    const implementingPlugins = plugins.filter(\n      plugin => plugin.nodeAPIs.includes(api) && plugin.name !== pluginSource\n    )\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId: args.traceId,\n    }\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${args.traceId}`\n    } else if (api === `onCreateNode`) {\n      id = `${api}${apiRunInstance.startTime}${args.node.internal.contentDigest}${args.traceId}`\n    } else if (api === `preprocessSource`) {\n      id = `${api}${apiRunInstance.startTime}${args.filename}${args.traceId}`\n    } else if (api === `onCreatePage`) {\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${args.traceId}`\n    } else {\n      // When tracing is turned on, the `args` object will have a\n      // `parentSpan` field that can be quite large. So we omit it\n      // before calling stringify\n      const argsJson = JSON.stringify(_.omit(args, `parentSpan`))\n      id = `${api}|${apiRunInstance.startTime}|${apiRunInstance.traceId}|${argsJson}`\n    }\n    apiRunInstance.id = id\n\n    if (args.waitForCascadingActions) {\n      waitingForCasacadeToFinish.push(apiRunInstance)\n    }\n\n    apisRunningById.set(apiRunInstance.id, apiRunInstance)\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n    }\n\n    let stopQueuedApiRuns = false\n    let onAPIRunComplete = null\n    if (api === `onCreatePage`) {\n      const path = args.page.path\n      const actionHandler = action => {\n        if (action.payload.path === path) {\n          stopQueuedApiRuns = true\n        }\n      }\n      emitter.on(`DELETE_PAGE`, actionHandler)\n      onAPIRunComplete = () => {\n        emitter.off(`DELETE_PAGE`, actionHandler)\n      }\n    }\n\n    Promise.mapSeries(implementingPlugins, plugin => {\n      if (stopQueuedApiRuns) {\n        return null\n      }\n\n      let pluginName =\n        plugin.name === `default-site-plugin` ? `gatsby-node.js` : plugin.name\n\n      return new Promise(resolve => {\n        resolve(runAPI(plugin, api, { ...args, parentSpan: apiSpan }))\n      }).catch(err => {\n        decorateEvent(`BUILD_PANIC`, {\n          pluginName: `${plugin.name}@${plugin.version}`,\n        })\n\n        reporter.panicOnBuild({\n          id: `11321`,\n          context: {\n            pluginName,\n            api,\n            message: err instanceof Error ? err.message : err,\n          },\n          error: err instanceof Error ? err : undefined,\n        })\n\n        return null\n      })\n    }).then(results => {\n      if (onAPIRunComplete) {\n        onAPIRunComplete()\n      }\n      // Remove runner instance\n      apisRunningById.delete(apiRunInstance.id)\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n      if (apisRunningById.size === 0) {\n        const { emitter } = require(`../redux`)\n        emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n      }\n\n      // Filter empty results\n      apiRunInstance.results = results.filter(result => !_.isEmpty(result))\n\n      // Filter out empty responses and return if the\n      // api caller isn't waiting for cascading actions to finish.\n      if (!args.waitForCascadingActions) {\n        apiSpan.finish()\n        resolve(apiRunInstance.results)\n      }\n\n      // Check if any of our waiters are done.\n      waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n        instance => {\n          // If none of its trace IDs are running, it's done.\n          const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId)\n          if (apisByTraceIdCount === 0) {\n            instance.span.finish()\n            instance.resolve(instance.results)\n            return false\n          } else {\n            return true\n          }\n        }\n      )\n      return\n    })\n  })\n"],"file":"api-runner-node.js"}